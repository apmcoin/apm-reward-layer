/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OwnableInterfaceId,
  OwnableInterfaceIdInterface,
} from "../OwnableInterfaceId";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "getInterfaceId",
    outputs: [
      {
        name: "",
        type: "bytes4",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610148806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636b9241fc14610030575b600080fd5b61003861008c565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6000808073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b905060e01b8173ffffffffffffffffffffffffffffffffffffffff1663715018a6905060e01b8273ffffffffffffffffffffffffffffffffffffffff16638f32d59b905060e01b8373ffffffffffffffffffffffffffffffffffffffff16638da5cb5b905060e01b1818189150509056fea165627a7a72305820ef852253cb2f09cb2235cbd8d2b316aa4185283a24c05f409374b2d79618cd060029";

type OwnableInterfaceIdConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnableInterfaceIdConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnableInterfaceId__factory extends ContractFactory {
  constructor(...args: OwnableInterfaceIdConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OwnableInterfaceId> {
    return super.deploy(overrides || {}) as Promise<OwnableInterfaceId>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OwnableInterfaceId {
    return super.attach(address) as OwnableInterfaceId;
  }
  connect(signer: Signer): OwnableInterfaceId__factory {
    return super.connect(signer) as OwnableInterfaceId__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnableInterfaceIdInterface {
    return new utils.Interface(_abi) as OwnableInterfaceIdInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnableInterfaceId {
    return new Contract(address, _abi, signerOrProvider) as OwnableInterfaceId;
  }
}
