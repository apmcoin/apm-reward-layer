/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UserManager, UserManagerInterface } from "../UserManager";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "addManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "userId",
        type: "bytes32",
      },
    ],
    name: "createUser",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "removeManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "isManager",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_managerContract",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "userId",
        type: "bytes32",
      },
    ],
    name: "UserCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "ManagerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "ManagerRemoved",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051602080610f158339810180604052602081101561003057600080fd5b81019080805190602001909291905050506100503361009760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610321565b6100af33600061016260201b61042e1790919060201c565b610104576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610ec16032913960400191505060405180910390fd5b61011c81600061024060201b61050c1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a60405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101e9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ef36022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610250828261016260201b60201c565b156102c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b610b91806103306000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632d06177a14610051578063abf7bfd814610095578063ac18de43146100c3578063f3ae241514610107575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610163565b005b6100c1600480360360208110156100ab57600080fd5b8101908080359060200190929190505050610226565b005b610105600480360360208110156100d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061034e565b005b6101496004803603602081101561011d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610411565b604051808215151515815260200191505060405180910390f35b61017733600061042e90919063ffffffff16565b6101cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610b126032913960400191505060405180910390fd5b6101e081600061050c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a60405160405180910390a250565b61023a33600061042e90919063ffffffff16565b61028f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610b126032913960400191505060405180910390fd5b600081600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516102c1906106a4565b808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604051809103906000f08015801561031a573d6000803e3d6000fd5b509050817f0808387569c40466c01100158dd3d6f79cdbd57e12063e1d81d1cd818d9639cd60405160405180910390a25050565b61036233600061042e90919063ffffffff16565b6103b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610b126032913960400191505060405180910390fd5b6103cb8160006105e790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fef69f7d97228658c92417be1b16b19058315de71fecb435d07b7d23728b6bd3160405160405180910390a250565b600061042782600061042e90919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156104b5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610b446022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610516828261042e565b15610589576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6105f1828261042e565b610646576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610af16021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61043f806106b28339019056fe608060405234801561001057600080fd5b5060405160408061043f8339810180604052604081101561003057600080fd5b8101908080519060200190929190805190602001909291905050508160008190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061039b806100a46000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632710ac801461005c57806358975919146100a657806375740f37146100c4578063ce6004e51461010a578063e9f998ce14610138575b600080fd5b61006461017e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100ae6101a4565b6040518082815260200191505060405180910390f35b6100f0600480360360208110156100da57600080fd5b81019080803590602001909291905050506101aa565b604051808215151515815260200191505060405180910390f35b6101366004803603602081101561012057600080fd5b81019080803590602001909291905050506101ca565b005b6101646004803603602081101561014e57600080fd5b8101908080359060200190929190505050610345565b604051808215151515815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60026020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3ae2415336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561026957600080fd5b505afa15801561027d573d6000803e3d6000fd5b505050506040513d602081101561029357600080fd5b8101908080519060200190929190505050610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f557365723a2063616c6c6572206973206e6f7461206d616e616765720000000081525060200191505060405180910390fd5b60016002600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006002600083815260200190815260200160002060009054906101000a900460ff16905091905056fea165627a7a7230582084478f94a3d49360566988f7d4ae06ee8e837886343e00e4d80bd6de69ea1a120029526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654d616e61676572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d616e6167657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a72305820e52bd31731121cf35295d251eb3d1670a2cfac10c5405065b90eca62a21048e000294d616e61676572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d616e6167657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373";

type UserManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserManager__factory extends ContractFactory {
  constructor(...args: UserManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _managerContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UserManager> {
    return super.deploy(
      _managerContract,
      overrides || {}
    ) as Promise<UserManager>;
  }
  getDeployTransaction(
    _managerContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_managerContract, overrides || {});
  }
  attach(address: string): UserManager {
    return super.attach(address) as UserManager;
  }
  connect(signer: Signer): UserManager__factory {
    return super.connect(signer) as UserManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserManagerInterface {
    return new utils.Interface(_abi) as UserManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserManager {
    return new Contract(address, _abi, signerOrProvider) as UserManager;
  }
}
