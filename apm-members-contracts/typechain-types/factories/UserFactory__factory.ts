/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UserFactory, UserFactoryInterface } from "../UserFactory";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "userCount",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "managerContract",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "addManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "userId",
        type: "bytes32",
      },
    ],
    name: "getUserCA",
    outputs: [
      {
        name: "userCA",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "userId",
        type: "bytes32",
      },
    ],
    name: "createUser",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "removeManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    name: "userList",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "isManager",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_managerContract",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "userId",
        type: "bytes32",
      },
    ],
    name: "UserCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "ManagerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "ManagerRemoved",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516020806115498339810180604052602081101561003057600080fd5b81019080805190602001909291905050506100503361009760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610321565b6100af33600061016260201b6107f01790919060201c565b610104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806114f56032913960400191505060405180910390fd5b61011c81600061024060201b6108ce1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a60405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806115276022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610250828261016260201b60201c565b156102c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6111c5806103306000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063abf7bfd81161005b578063abf7bfd8146101a7578063ac18de43146101d5578063af2d1c9514610219578063f3ae24151461028757610088565b806307973ccf1461008d5780632710ac80146100ab5780632d06177a146100f55780633c08763b14610139575b600080fd5b6100956102e3565b6040518082815260200191505060405180910390f35b6100b36102e9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101376004803603602081101561010b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061030f565b005b6101656004803603602081101561014f57600080fd5b81019080803590602001909291905050506103d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101d3600480360360208110156101bd57600080fd5b8101908080359060200190929190505050610494565b005b610217600480360360208110156101eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106dd565b005b6102456004803603602081101561022f57600080fd5b81019080803590602001909291905050506107a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102c96004803603602081101561029d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d3565b604051808215151515815260200191505060405180910390f35b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103233360006107f090919063ffffffff16565b610378576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806111466032913960400191505060405180910390fd5b61038c8160006108ce90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a60405160405180910390a250565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461048f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806111256021913960400191505060405180910390fd5b919050565b6104a83360006107f090919063ffffffff16565b6104fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806111466032913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806110e26022913960400191505060405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516105e690610aee565b808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604051809103906000f08015801561063f573d6000803e3d6000fd5b506003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106a760016002546109a990919063ffffffff16565b600281905550807f0808387569c40466c01100158dd3d6f79cdbd57e12063e1d81d1cd818d9639cd60405160405180910390a250565b6106f13360006107f090919063ffffffff16565b610746576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806111466032913960400191505060405180910390fd5b61075a816000610a3190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fef69f7d97228658c92417be1b16b19058315de71fecb435d07b7d23728b6bd3160405160405180910390a250565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006107e98260006107f090919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610877576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111786022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6108d882826107f0565b1561094b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080828401905083811015610a27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610a3b82826107f0565b610a90576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806111046021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6105e680610afc8339019056fe608060405234801561001057600080fd5b506040516040806105e68339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505081600181905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610543806100a36000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632710ac80146100675780633383f0f7146100b15780634272ee18146100df5780635897591914610125578063ce6004e514610143578063e9f998ce14610171575b600080fd5b61006f6101b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100dd600480360360208110156100c757600080fd5b81019080803590602001909291905050506101dc565b005b61010b600480360360208110156100f557600080fd5b810190808035906020019092919050505061034d565b604051808215151515815260200191505060405180910390f35b61012d61036d565b6040518082815260200191505060405180910390f35b61016f6004803603602081101561015957600080fd5b8101908080359060200190929190505050610373565b005b61019d6004803603602081101561018757600080fd5b81019080803590602001909291905050506104ed565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3ae2415336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561027a57600080fd5b505afa15801561028e573d6000803e3d6000fd5b505050506040513d60208110156102a457600080fd5b8101908080519060200190929190505050610327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f557365723a2063616c6c6572206973206e6f742061206d616e6167657200000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006101000a81549060ff021916905550565b60026020528060005260406000206000915054906101000a900460ff1681565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3ae2415336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561041157600080fd5b505afa158015610425573d6000803e3d6000fd5b505050506040513d602081101561043b57600080fd5b81019080805190602001909291905050506104be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f557365723a2063616c6c6572206973206e6f742061206d616e6167657200000081525060200191505060405180910390fd5b60016002600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006002600083815260200190815260200160002060009054906101000a900460ff16905091905056fea165627a7a72305820b65414062e80214caa30e70b95affcf80d1fb0209274951643628ca68efe69f7002955736572466163746f72793a2075736572496420616c726561647920657869737473526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6555736572466163746f72793a2075736572496420646f65736e27742065786973744d616e61676572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d616e6167657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a723058204887fba8239f9e04013e5a9bb6f5f0bc4d6a3b0dd992a5010c1fd6586f5c8a3800294d616e61676572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d616e6167657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373";

type UserFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserFactory__factory extends ContractFactory {
  constructor(...args: UserFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _managerContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UserFactory> {
    return super.deploy(
      _managerContract,
      overrides || {}
    ) as Promise<UserFactory>;
  }
  getDeployTransaction(
    _managerContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_managerContract, overrides || {});
  }
  attach(address: string): UserFactory {
    return super.attach(address) as UserFactory;
  }
  connect(signer: Signer): UserFactory__factory {
    return super.connect(signer) as UserFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserFactoryInterface {
    return new utils.Interface(_abi) as UserFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserFactory {
    return new Contract(address, _abi, signerOrProvider) as UserFactory;
  }
}
