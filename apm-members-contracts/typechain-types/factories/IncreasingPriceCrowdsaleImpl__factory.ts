/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IncreasingPriceCrowdsaleImpl,
  IncreasingPriceCrowdsaleImplInterface,
} from "../IncreasingPriceCrowdsaleImpl";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "hasClosed",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "finalRate",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "rate",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "weiRaised",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOpen",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "closingTime",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "wallet",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "initialRate",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "openingTime",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "buyTokens",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getCurrentRate",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "token",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "openingTime",
        type: "uint256",
      },
      {
        name: "closingTime",
        type: "uint256",
      },
      {
        name: "wallet",
        type: "address",
      },
      {
        name: "token",
        type: "address",
      },
      {
        name: "initialRate",
        type: "uint256",
      },
      {
        name: "finalRate",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "prevClosingTime",
        type: "uint256",
      },
      {
        indexed: false,
        name: "newClosingTime",
        type: "uint256",
      },
    ],
    name: "TimedCrowdsaleExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "purchaser",
        type: "address",
      },
      {
        indexed: true,
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
];

const _bytecode =
  "";

type IncreasingPriceCrowdsaleImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncreasingPriceCrowdsaleImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncreasingPriceCrowdsaleImpl__factory extends ContractFactory {
  constructor(...args: IncreasingPriceCrowdsaleImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    openingTime: BigNumberish,
    closingTime: BigNumberish,
    wallet: string,
    token: string,
    initialRate: BigNumberish,
    finalRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IncreasingPriceCrowdsaleImpl> {
    return super.deploy(
      openingTime,
      closingTime,
      wallet,
      token,
      initialRate,
      finalRate,
      overrides || {}
    ) as Promise<IncreasingPriceCrowdsaleImpl>;
  }
  getDeployTransaction(
    openingTime: BigNumberish,
    closingTime: BigNumberish,
    wallet: string,
    token: string,
    initialRate: BigNumberish,
    finalRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      openingTime,
      closingTime,
      wallet,
      token,
      initialRate,
      finalRate,
      overrides || {}
    );
  }
  attach(address: string): IncreasingPriceCrowdsaleImpl {
    return super.attach(address) as IncreasingPriceCrowdsaleImpl;
  }
  connect(signer: Signer): IncreasingPriceCrowdsaleImpl__factory {
    return super.connect(signer) as IncreasingPriceCrowdsaleImpl__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncreasingPriceCrowdsaleImplInterface {
    return new utils.Interface(_abi) as IncreasingPriceCrowdsaleImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncreasingPriceCrowdsaleImpl {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IncreasingPriceCrowdsaleImpl;
  }
}
