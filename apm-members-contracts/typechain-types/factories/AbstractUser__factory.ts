/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AbstractUser, AbstractUserInterface } from "../AbstractUser";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "addManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "removeItemToInventory",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "itemId",
        type: "uint256",
      },
      {
        name: "url",
        type: "bytes32",
      },
    ],
    name: "addItemToInventory",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "destroy",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "removeManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "checkInventory",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "isManager",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_userId",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "ManagerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "ManagerRemoved",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051602080610dd48339810180604052602081101561003057600080fd5b81019080805190602001909291905050506100503361007860201b60201c565b806001819055506001600260006101000a81548160ff02191690831515021790555050610302565b61009033600061014360201b6107581790919060201c565b6100e5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610d806032913960400191505060405180910390fd5b6100fd81600061022160201b6108361790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a60405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610db26022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610231828261014360201b60201c565b156102a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b610a6f806103116000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806383197ef01161005b57806383197ef01461012c578063ac18de4314610136578063e9f998ce1461017a578063f3ae2415146101bc5761007d565b80632d06177a146100825780633383f0f7146100c657806358c273b2146100f4575b600080fd5b6100c46004803603602081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610218565b005b6100f2600480360360208110156100dc57600080fd5b81019080803590602001909291905050506102db565b005b61012a6004803603604081101561010a57600080fd5b810190808035906020019092919080359060200190929190505050610404565b005b61013461052f565b005b6101786004803603602081101561014c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105b5565b005b6101a66004803603602081101561019057600080fd5b8101908080359060200190929190505050610678565b6040518082815260200191505060405180910390f35b6101fe600480360360208110156101d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061073b565b604051808215151515815260200191505060405180910390f35b61022c33600061075890919063ffffffff16565b610281576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806109f06032913960400191505060405180910390fd5b61029581600061083690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a60405160405180910390a250565b6102ef33600061075890919063ffffffff16565b610344576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806109f06032913960400191505060405180910390fd5b600260009054906101000a900460ff166103c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4162737472616374557365723a2075736572206e6f742061637469766500000081525060200191505060405180910390fd5b60036000600260009054906101000a900460ff1615151515815260200190815260200160002060008281526020019081526020016000206000905550565b61041833600061075890919063ffffffff16565b61046d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806109f06032913960400191505060405180910390fd5b600260009054906101000a900460ff166104ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4162737472616374557365723a2075736572206e6f742061637469766500000081525060200191505060405180910390fd5b8060036000600260009054906101000a900460ff161515151581526020019081526020016000206000848152602001908152602001600020819055505050565b61054333600061075890919063ffffffff16565b610598576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806109f06032913960400191505060405180910390fd5b6000600260006101000a81548160ff021916908315150217905550565b6105c933600061075890919063ffffffff16565b61061e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806109f06032913960400191505060405180910390fd5b61063281600061091190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fef69f7d97228658c92417be1b16b19058315de71fecb435d07b7d23728b6bd3160405160405180910390a250565b6000600260009054906101000a900460ff166106fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4162737472616374557365723a2075736572206e6f742061637469766500000081525060200191505060405180910390fd5b60036000600260009054906101000a900460ff161515151581526020019081526020016000206000838152602001908152602001600020549050919050565b600061075182600061075890919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107df576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610a226022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6108408282610758565b156108b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61091b8282610758565b610970576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806109cf6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654d616e61676572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d616e6167657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a72305820e9ba23ca667c3b689bb85cc1a2b1e48ad50e6bf926d45ccbe9fb27f14fd156eb00294d616e61676572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d616e6167657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373";

type AbstractUserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AbstractUserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AbstractUser__factory extends ContractFactory {
  constructor(...args: AbstractUserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _userId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AbstractUser> {
    return super.deploy(_userId, overrides || {}) as Promise<AbstractUser>;
  }
  getDeployTransaction(
    _userId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_userId, overrides || {});
  }
  attach(address: string): AbstractUser {
    return super.attach(address) as AbstractUser;
  }
  connect(signer: Signer): AbstractUser__factory {
    return super.connect(signer) as AbstractUser__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AbstractUserInterface {
    return new utils.Interface(_abi) as AbstractUserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AbstractUser {
    return new Contract(address, _abi, signerOrProvider) as AbstractUser;
  }
}
