/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AbstractUser, AbstractUserInterface } from "../AbstractUser";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "isActive",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "addManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "removeItemToInventory",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "itemId",
        type: "uint256",
      },
      {
        name: "url",
        type: "bytes32",
      },
    ],
    name: "addItemToInventory",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "destroy",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "removeManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "checkInventory",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "isManager",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_userId",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "ManagerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "ManagerRemoved",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051602080610d248339810180604052602081101561003057600080fd5b810190808051906020019092919050505061005933600061008160201b61087a1790919060201c565b806001819055506001600260006101000a81548160ff02191690831515021790555050610240565b610091828261016260201b60201c565b15610104576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101e9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d026022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610ab38061024f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806383197ef01161005b57806383197ef014610159578063ac18de4314610163578063e9f998ce146101a7578063f3ae2415146101e957610088565b806322f3e2d41461008d5780632d06177a146100af5780633383f0f7146100f357806358c273b214610121575b600080fd5b610095610245565b604051808215151515815260200191505060405180910390f35b6100f1600480360360208110156100c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b005b61011f6004803603602081101561010957600080fd5b810190808035906020019092919050505061031f565b005b6101576004803603604081101561013757600080fd5b810190808035906020019092919080359060200190929190505050610448565b005b610161610573565b005b6101a56004803603602081101561017957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105f9565b005b6101d3600480360360208110156101bd57600080fd5b81019080803590602001909291905050506106bc565b6040518082815260200191505060405180910390f35b61022b600480360360208110156101ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061077f565b604051808215151515815260200191505060405180910390f35b6000600260009054906101000a900460ff16905090565b61027033600061079c90919063ffffffff16565b6102c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610a346032913960400191505060405180910390fd5b6102d981600061087a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a60405160405180910390a250565b61033333600061079c90919063ffffffff16565b610388576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610a346032913960400191505060405180910390fd5b600260009054906101000a900460ff1661040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4162737472616374557365723a2075736572206e6f742061637469766500000081525060200191505060405180910390fd5b60036000600260009054906101000a900460ff1615151515815260200190815260200160002060008281526020019081526020016000206000905550565b61045c33600061079c90919063ffffffff16565b6104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610a346032913960400191505060405180910390fd5b600260009054906101000a900460ff16610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4162737472616374557365723a2075736572206e6f742061637469766500000081525060200191505060405180910390fd5b8060036000600260009054906101000a900460ff161515151581526020019081526020016000206000848152602001908152602001600020819055505050565b61058733600061079c90919063ffffffff16565b6105dc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610a346032913960400191505060405180910390fd5b6000600260006101000a81548160ff021916908315150217905550565b61060d33600061079c90919063ffffffff16565b610662576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610a346032913960400191505060405180910390fd5b61067681600061095590919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fef69f7d97228658c92417be1b16b19058315de71fecb435d07b7d23728b6bd3160405160405180910390a250565b6000600260009054906101000a900460ff16610740576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4162737472616374557365723a2075736572206e6f742061637469766500000081525060200191505060405180910390fd5b60036000600260009054906101000a900460ff161515151581526020019081526020016000206000838152602001908152602001600020549050919050565b600061079582600061079c90919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610823576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610a666022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610884828261079c565b156108f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61095f828261079c565b6109b4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610a136021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654d616e61676572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d616e6167657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a723058201ad36c4008f33b4ee4b5fecfce6c0f9d514d2892ee31a489609a3feba436f91c0029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373";

type AbstractUserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AbstractUserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AbstractUser__factory extends ContractFactory {
  constructor(...args: AbstractUserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _userId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AbstractUser> {
    return super.deploy(_userId, overrides || {}) as Promise<AbstractUser>;
  }
  getDeployTransaction(
    _userId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_userId, overrides || {});
  }
  attach(address: string): AbstractUser {
    return super.attach(address) as AbstractUser;
  }
  connect(signer: Signer): AbstractUser__factory {
    return super.connect(signer) as AbstractUser__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AbstractUserInterface {
    return new utils.Interface(_abi) as AbstractUserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AbstractUser {
    return new Contract(address, _abi, signerOrProvider) as AbstractUser;
  }
}
