/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AbstractUser, AbstractUserInterface } from "../AbstractUser";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "isActive",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "addManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getUserId",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "removeItemToInventory",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "itemId",
        type: "uint256",
      },
      {
        name: "url",
        type: "bytes32",
      },
    ],
    name: "addItemToInventory",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "destroy",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "removeManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "checkInventory",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "account",
        type: "address",
      },
    ],
    name: "isManager",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "userId",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "ManagerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "ManagerRemoved",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051602080610d578339810180604052602081101561003057600080fd5b810190808051906020019092919050505061005933600061008160201b6108ad1790919060201c565b806001819055506001600260006101000a81548160ff02191690831515021790555050610240565b610091828261016260201b60201c565b15610104576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101e9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d356022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610ae68061024f6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806358c273b21161006657806358c273b21461014a57806383197ef014610182578063ac18de431461018c578063e9f998ce146101d0578063f3ae24151461021257610093565b806322f3e2d4146100985780632d06177a146100ba5780632ebcb653146100fe5780633383f0f71461011c575b600080fd5b6100a061026e565b604051808215151515815260200191505060405180910390f35b6100fc600480360360208110156100d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610285565b005b610106610348565b6040518082815260200191505060405180910390f35b6101486004803603602081101561013257600080fd5b8101908080359060200190929190505050610352565b005b6101806004803603604081101561016057600080fd5b81019080803590602001909291908035906020019092919050505061047b565b005b61018a6105a6565b005b6101ce600480360360208110156101a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061062c565b005b6101fc600480360360208110156101e657600080fd5b81019080803590602001909291905050506106ef565b6040518082815260200191505060405180910390f35b6102546004803603602081101561022857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107b2565b604051808215151515815260200191505060405180910390f35b6000600260009054906101000a900460ff16905090565b6102993360006107cf90919063ffffffff16565b6102ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610a676032913960400191505060405180910390fd5b6103028160006108ad90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a60405160405180910390a250565b6000600154905090565b6103663360006107cf90919063ffffffff16565b6103bb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610a676032913960400191505060405180910390fd5b600260009054906101000a900460ff1661043d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4162737472616374557365723a2075736572206e6f742061637469766500000081525060200191505060405180910390fd5b60036000600260009054906101000a900460ff1615151515815260200190815260200160002060008281526020019081526020016000206000905550565b61048f3360006107cf90919063ffffffff16565b6104e4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610a676032913960400191505060405180910390fd5b600260009054906101000a900460ff16610566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4162737472616374557365723a2075736572206e6f742061637469766500000081525060200191505060405180910390fd5b8060036000600260009054906101000a900460ff161515151581526020019081526020016000206000848152602001908152602001600020819055505050565b6105ba3360006107cf90919063ffffffff16565b61060f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610a676032913960400191505060405180910390fd5b6000600260006101000a81548160ff021916908315150217905550565b6106403360006107cf90919063ffffffff16565b610695576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180610a676032913960400191505060405180910390fd5b6106a981600061098890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fef69f7d97228658c92417be1b16b19058315de71fecb435d07b7d23728b6bd3160405160405180910390a250565b6000600260009054906101000a900460ff16610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4162737472616374557365723a2075736572206e6f742061637469766500000081525060200191505060405180910390fd5b60036000600260009054906101000a900460ff161515151581526020019081526020016000206000838152602001908152602001600020549050919050565b60006107c88260006107cf90919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610856576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610a996022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6108b782826107cf565b1561092a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61099282826107cf565b6109e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610a466021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654d616e61676572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d616e6167657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a723058209d61af8a30af9fe54a2898fb0dd7bf0a76a3e517b0e21584b44690bd2ae4e0c10029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373";

type AbstractUserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AbstractUserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AbstractUser__factory extends ContractFactory {
  constructor(...args: AbstractUserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    userId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AbstractUser> {
    return super.deploy(userId, overrides || {}) as Promise<AbstractUser>;
  }
  getDeployTransaction(
    userId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(userId, overrides || {});
  }
  attach(address: string): AbstractUser {
    return super.attach(address) as AbstractUser;
  }
  connect(signer: Signer): AbstractUser__factory {
    return super.connect(signer) as AbstractUser__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AbstractUserInterface {
    return new utils.Interface(_abi) as AbstractUserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AbstractUser {
    return new Contract(address, _abi, signerOrProvider) as AbstractUser;
  }
}
